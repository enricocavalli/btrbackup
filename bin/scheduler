#!/bin/bash

# demone scheduler
INSTALLDIR=$( (cd -P $(dirname $0) && pwd) | sed -e 's!/bin!!' )

. $INSTALLDIR/bin/functions

pid=$$
scriptname=$(basename ${0})
logfile="$INSTALLDIR/logs/${scriptname}.log"

echo ${pid} > ${INSTALLDIR}/locks/${scriptname}.pid

while [ 1 ]; do

	#Â ora corrente
	now=$(date +%H:%M)
	now=22:00
	# ordino le macchine da backuppare per pool e per ordine numerico all'interno del pool
	hosts=$(cat $INSTALLDIR/etc/scheduler.conf |  sed -e 's/#.*//'| grep -v "^\s*$" | grep $now | \
	        awk '{ printf $NF; if ( $NF !~ "@") { printf  "@default"; } print " "$1; }'  |  \
	        sed -e 's/@/ /' | sort -k2,2 -k1,1n | awk  '{print $2" "$3}' | tr '\n' '\1')
	  
	pools=$(echo -n $hosts | tr '\1' '\n' | awk '{print $1}' | sort -u)     
	

	lock="$INSTALLDIR/locks/$(echo "$hosts" | md5sum | grep -o "[a-z0-9]\{32\}")"

	if ! [ "$hosts" == "" ]; then

		lockfile -l 3600 -r 0 "$lock" >/dev/null 2>&1
		return=$?
		if [ "$return" == "0" ]; then
	
		(for i in $pools; do
		concurrency=$(get_max_jobs $i)
		echo -n "-j ${concurrency} " 
		echo -n $hosts | tr '\1' '\n' | grep $i | awk '{print $2}' | tr '\n' ' '
		echo
		done
		) | while read line ; do
		
		log_message ${scriptname} ${pid} "running job-runner ${line}" >> ${logfile}
		$INSTALLDIR/bin/job-runner ${line} 2>&1 | log_output ${scriptname} ${pid} >> ${logfile} &
		 done	
		

		
	fi

	sleep 10

done
